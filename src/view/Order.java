/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import DAO.OrderDAO;
import entities.Order_Class;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class Order extends javax.swing.JFrame {

    /**
     * Creates new form Order
     */
    OrderDAO od;

    public Order() {
        initComponents();
        od = new OrderDAO();
        ImageIcon img = new ImageIcon("image//Order.png");
        this.setIconImage(img.getImage());
        btnReset.setSize(30, 30);
        new setImage().setImageButton(btnReset, "image//refresh_256.png");
        btnSearch.setSize(30, 30);
        new setImage().setImageButton(btnSearch, "image//search-512.png");
        loadtblOrder();
        loadIDOrder();
        loadCusName();
        loadIDProduct();
        loadNamePromo();
        loadUserNameEmm();
    }

    public void loadtblOrder() {
        DefaultTableModel model = (DefaultTableModel) tblOrder.getModel();
        model.setNumRows(0);
        for (Order_Class oc : od.getAll()) {
            model.addRow(new Object[]{oc.getIDOrder(), oc.getIDProduct(), oc.getCusName(), oc.getQuantity(), oc.getNamePromo(), oc.getTimeOrder(), oc.getDateOrder(), oc.getUsernameEmp()});
            tblOrder.setModel(model);
        }
    }

    public void loadIDOrder() {
        List<Order_Class> data = od.getByIDOrder();
        DefaultComboBoxModel<String> models = new DefaultComboBoxModel<>();
        models.addElement("");
        for (Order_Class item : data) {
            models.addElement(item.getIDOrder());
        }
        cbIDOrder.setModel(models);
    }

    public void loadIDProduct() {
        List<Order_Class> data = od.getByIDProduct();
        DefaultComboBoxModel<String> models = new DefaultComboBoxModel<>();
        models.addElement("");
        for (Order_Class item : data) {
            models.addElement(item.getIDProduct());
        }
        cbIDProduct.setModel(models);
    }

    public void loadCusName() {
        List<Order_Class> data = od.getByCusName();
        DefaultComboBoxModel<String> models = new DefaultComboBoxModel<>();
        models.addElement("");
        for (Order_Class item : data) {
            models.addElement(item.getCusName());
        }
        cbIDCus.setModel(models);
    }

    public void loadNamePromo() {
        List<Order_Class> data = od.getByNamePromo();
        DefaultComboBoxModel<String> models = new DefaultComboBoxModel<>();
        models.addElement("");
        for (Order_Class item : data) {
            models.addElement(item.getNamePromo());
        }
        cbPromotions.setModel(models);
    }

    public void loadUserNameEmm() {
        List<Order_Class> data = od.getByUsernameEmp();
        DefaultComboBoxModel<String> models = new DefaultComboBoxModel<>();
        models.addElement("");
        for (Order_Class item : data) {
            models.addElement(item.getUsernameEmp());
        }
        cbNameEmp.setModel(models);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbIDOrder = new javax.swing.JComboBox<String>();
        cbIDProduct = new javax.swing.JComboBox<String>();
        cbNameEmp = new javax.swing.JComboBox<String>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbPromotions = new javax.swing.JComboBox<String>();
        cbIDCus = new javax.swing.JComboBox<String>();
        jLabel8 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrder = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Quản lý đơn hàng");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Thông Tin Tìm Kiếm");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Mã đơn hàng:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Mã sản phẩm:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("Nhân viên:");

        cbIDOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cbIDOrderMousePressed(evt);
            }
        });
        cbIDOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbIDOrderActionPerformed(evt);
            }
        });

        cbIDProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbIDProductActionPerformed(evt);
            }
        });

        cbNameEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNameEmpActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 0, 255));
        jLabel5.setText("Chương trình khuyến mãi:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Mã khách hàng:");

        cbPromotions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPromotionsActionPerformed(evt);
            }
        });

        cbIDCus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbIDCusActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 204, 0));
        jLabel8.setText("Ngày:");

        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 0, 0));
        btnSearch.setText("Tìm Kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        tblOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã đơn hàng", "Mã sản phẩm", "Mã khách hàng", "Số lượng", "CTKM", "Thời gian", "Ngày ", "Nhân viên"
            }
        ));
        jScrollPane1.setViewportView(tblOrder);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 925, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbIDOrder, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbIDProduct, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbNameEmp, 0, 178, Short.MAX_VALUE))
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbPromotions, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbIDCus, 0, 158, Short.MAX_VALUE))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbPromotions, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbIDOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbIDProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbIDCus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbNameEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        cbIDCus.setSelectedIndex(-1);
        cbIDOrder.setSelectedIndex(-1);
        cbIDProduct.setSelectedIndex(-1);
        cbNameEmp.setSelectedIndex(-1);
        cbPromotions.setSelectedIndex(-1);
        txtDate.setText("");
        cbIDCus.setEnabled(true);
        cbIDProduct.setEnabled(true);
        cbPromotions.setEnabled(true);
        cbNameEmp.setEnabled(true);
        txtDate.setEnabled(true);
        cbIDOrder.setEnabled(true);
        btnSearch.removeAll();
        loadtblOrder();
    }//GEN-LAST:event_btnResetActionPerformed

    private void cbIDOrderMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbIDOrderMousePressed

    }//GEN-LAST:event_cbIDOrderMousePressed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed

        String IDOrder = (String) cbIDOrder.getSelectedItem();
        String IDProduct = (String) cbIDProduct.getSelectedItem();
        String CusName = (String) cbIDCus.getSelectedItem();
        String NamePromo = (String) cbPromotions.getSelectedItem();
        if (!txtDate.getText().trim().equals("")) {
            while (true) {
                if (!txtDate.getText().trim().matches("([0-9]{0,2}/)?([0-9]{0,2}/)?[0-9]{4}")) {
                    JOptionPane.showMessageDialog(null, "Ngày có dạng: ngày/tháng/năm");
                    return;
                } else {
                    break;
                }
            }
        }
        String DateOrder = (String) txtDate.getText();
        String UsernameEmp = (String) cbNameEmp.getSelectedItem();
        List<Order_Class> data = new ArrayList<>();
        if (IDOrder == "" && IDProduct == "" && CusName == "" && NamePromo == "" && UsernameEmp == "" && DateOrder=="") {
            JOptionPane.showMessageDialog(null, "Không tìm thấy thông tin theo yêu cầu");
        } else {
            if (cbIDOrder.getSelectedIndex() <= 0) {
                IDOrder = "";
            } else {
                data = od.TimKiem_IDOrder(IDOrder);
                DefaultTableModel model = (DefaultTableModel) tblOrder.getModel();
                model.setNumRows(0);
                for (Order_Class oc : data) {
                    model.addRow(new Object[]{oc.getIDOrder(), oc.getIDProduct(), oc.getCusName(), oc.getQuantity(), oc.getNamePromo(), oc.getTimeOrder(), oc.getDateOrder(), oc.getUsernameEmp()});
                    tblOrder.setModel(model);
                }
            }
            if (cbIDProduct.getSelectedIndex() <= 0) {
                IDProduct = "";
            } else {
                data = od.TimKiem_IDProduct(IDProduct);
                DefaultTableModel model = (DefaultTableModel) tblOrder.getModel();
                model.setNumRows(0);
                for (Order_Class oc : data) {
                    model.addRow(new Object[]{oc.getIDOrder(), oc.getIDProduct(), oc.getCusName(), oc.getQuantity(), oc.getNamePromo(), oc.getTimeOrder(), oc.getDateOrder(), oc.getUsernameEmp()});
                    tblOrder.setModel(model);
                }
            }
            if (cbIDCus.getSelectedIndex() <= 0) {
                CusName = "";
            } else {
                data = od.TimKiem_CusName(CusName);
                DefaultTableModel model = (DefaultTableModel) tblOrder.getModel();
                model.setNumRows(0);
                for (Order_Class oc : data) {
                    model.addRow(new Object[]{oc.getIDOrder(), oc.getIDProduct(), oc.getCusName(), oc.getQuantity(), oc.getNamePromo(), oc.getTimeOrder(), oc.getDateOrder(), oc.getUsernameEmp()});
                    tblOrder.setModel(model);
                }
            }
            if (cbPromotions.getSelectedIndex() <= 0) {
                NamePromo = "";
            } else {
                data = od.TimKiem_NamePromo(NamePromo);
                DefaultTableModel model = (DefaultTableModel) tblOrder.getModel();
                model.setNumRows(0);
                for (Order_Class oc : data) {
                    model.addRow(new Object[]{oc.getIDOrder(), oc.getIDProduct(), oc.getCusName(), oc.getQuantity(), oc.getNamePromo(), oc.getTimeOrder(), oc.getDateOrder(), oc.getUsernameEmp()});
                    tblOrder.setModel(model);
                }
            }
            if (cbNameEmp.getSelectedIndex() <= 0) {
                UsernameEmp = "";
            } else {
                data = od.TimKiem_UsernameEmp(UsernameEmp);
                DefaultTableModel model = (DefaultTableModel) tblOrder.getModel();
                model.setNumRows(0);
                for (Order_Class oc : data) {
                    model.addRow(new Object[]{oc.getIDOrder(), oc.getIDProduct(), oc.getCusName(), oc.getQuantity(), oc.getNamePromo(), oc.getTimeOrder(), oc.getDateOrder(), oc.getUsernameEmp()});
                    tblOrder.setModel(model);
                }
            }
            if (DateOrder != "") {
                data = od.TimKiem_DateOrder(DateOrder);
                DefaultTableModel model = (DefaultTableModel) tblOrder.getModel();
                model.setNumRows(0);
                for (Order_Class oc : data) {
                    model.addRow(new Object[]{oc.getIDOrder(), oc.getIDProduct(), oc.getCusName(), oc.getQuantity(), oc.getNamePromo(), oc.getTimeOrder(), oc.getDateOrder(), oc.getUsernameEmp()});
                    tblOrder.setModel(model);
                }
            }
        }

    }//GEN-LAST:event_btnSearchActionPerformed

    private void cbIDOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbIDOrderActionPerformed
        cbIDCus.setEnabled(false);
        cbIDProduct.setEnabled(false);
        cbPromotions.setEnabled(false);
        cbNameEmp.setEnabled(false);
        txtDate.setEnabled(false);
    }//GEN-LAST:event_cbIDOrderActionPerformed

    private void cbIDProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbIDProductActionPerformed
        cbIDCus.setEnabled(false);
        cbIDOrder.setEnabled(false);
        cbPromotions.setEnabled(false);
        cbNameEmp.setEnabled(false);
        txtDate.setEnabled(false);
    }//GEN-LAST:event_cbIDProductActionPerformed

    private void cbNameEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNameEmpActionPerformed
        cbIDCus.setEnabled(false);
        cbIDOrder.setEnabled(false);
        cbPromotions.setEnabled(false);
        cbIDProduct.setEnabled(false);
        txtDate.setEnabled(false);
    }//GEN-LAST:event_cbNameEmpActionPerformed

    private void cbPromotionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPromotionsActionPerformed
        cbIDCus.setEnabled(false);
        cbIDOrder.setEnabled(false);
        cbNameEmp.setEnabled(false);
        cbIDProduct.setEnabled(false);
        txtDate.setEnabled(false);
    }//GEN-LAST:event_cbPromotionsActionPerformed

    private void cbIDCusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbIDCusActionPerformed
        cbPromotions.setEnabled(false);
        cbIDOrder.setEnabled(false);
        cbNameEmp.setEnabled(false);
        cbIDProduct.setEnabled(false);
        txtDate.setEnabled(false);
    }//GEN-LAST:event_cbIDCusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    try {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    } catch (IllegalAccessException ex) {
                        Logger.getLogger(Order.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (UnsupportedLookAndFeelException ex) {
                        Logger.getLogger(Order.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Order().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cbIDCus;
    private javax.swing.JComboBox<String> cbIDOrder;
    private javax.swing.JComboBox<String> cbIDProduct;
    private javax.swing.JComboBox<String> cbNameEmp;
    private javax.swing.JComboBox<String> cbPromotions;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblOrder;
    private javax.swing.JTextField txtDate;
    // End of variables declaration//GEN-END:variables
}
